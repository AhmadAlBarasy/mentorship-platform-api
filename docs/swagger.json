{
  "openapi": "3.0.0",
  "info": {
    "title": "Growthly Platform API Docs",
    "description": "",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local API Development"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register a new user (Mentee, Mentor)",
        "tags": ["Authentication"],
        "description": "Creates a new user on the platform, the user can join either as a Mentee, or as a Mentor",
        "operationId": "signupUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "id": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "headline": {
                    "type": "string",
                    "example": "Software Engineer at Google"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User password (should meet platform's security policy)",
                    "example": "StrongP@ssword123"
                  },
                  "country": {
                    "type": "string",
                    "description": "ISO 3166-1 alpha-3 country code",
                    "example": "USA"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["mentee", "mentor"],
                    "example": "mentee"
                  }
                },
                "required": [
                  "name",
                  "id",
                  "email",
                  "headline",
                  "password",
                  "country",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Resource Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "id has already been taken"
                    }
                  }
                }
              }
            }
          }          
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Logs a User into the platform",
        "tags": ["Authentication"],
        "description": "Authenticates a user and returns a token. The user must provide either an ID or an email, along with a password.",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@gmail.com",
                    "description": "User email address (required if ID is not provided)"
                  },
                  "id": {
                    "type": "string",
                    "example": "johndoe",
                    "description": "User ID (required if email is not provided)"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "StrongP@ssword123",
                    "description": "User password (always required)"
                  }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid id/email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logs the user out of the platform",
        "tags": ["Authentication"],
        "description": "Logs the user out by clearing the authentication token cookie. Requires an active session (partial or full).",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized, No token provided"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm-email": {
      "post": {
        "summary": "Confirm user's email",
        "tags": ["Authentication"],
        "description": "Confirms a user's email address, requires a partial session",
        "operationId": "confirmEmail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "52fe111a0a24ee5a"
                  }
                },
                "required": ["code"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email has been confirmed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email confirmed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid confirmation code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Forgot password",
        "tags": ["Authentication"],
        "description": "Sends a password reset email to the user",
        "operationId": "forgotPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@gmail.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "An email with the reset link has been sent to johndoe@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "tags": ["Authentication"],
        "description": "Resets the user's password using a provided token",
        "operationId": "resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "NewStrongP@ssword123"
                  },
                  "token": {
                    "type": "string",
                    "example": "389f57d8d05040c60ae9648f94e1018a"
                  }
                },
                "required": ["password", "token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset token has expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}